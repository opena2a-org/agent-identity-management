# Multi-stage build for Go backend
FROM golang:1.23-alpine AS builder

# Install build dependencies
RUN apk add --no-cache git gcc musl-dev

# Set working directory
WORKDIR /build

# Copy go mod files
COPY apps/backend/go.mod apps/backend/go.sum ./
RUN go mod download

# Copy source code
COPY apps/backend/ ./

# Build the application
RUN CGO_ENABLED=1 GOOS=linux go build -a -installsuffix cgo -o aim-server ./cmd/server

# Final stage
FROM alpine:latest

# Install runtime dependencies
RUN apk --no-cache add ca-certificates tzdata wget

# Create non-root user
RUN addgroup -g 1000 aim && \
    adduser -D -u 1000 -G aim aim

WORKDIR /app

# Copy binary from builder
COPY --from=builder /build/aim-server .

# Copy migrations
COPY apps/backend/migrations ./migrations

# Change ownership
RUN chown -R aim:aim /app

# Switch to non-root user
USER aim

# Expose port
EXPOSE 8080

# Health check
HEALTHCHECK --interval=30s --timeout=3s --start-period=5s --retries=3 \
  CMD wget --no-verbose --tries=1 --spider http://localhost:8080/health || exit 1

# Run the application
CMD ["./aim-server"]
